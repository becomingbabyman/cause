["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs.core.async.impl.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$remove!",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","~:line",32,"~:column",4,"~:end-line",32,"~:end-column",11,"~:protocol","~$cljs.core.async.impl.protocols/Buffer","~:doc","remove and return next item from buffer, called under chan mutex","~:arglists",["~#list",["~$quote",["^J",[["~$b"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/remove!","~:variadic",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",11,"~:method-params",["^J",[["~$b"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^C",1,"^B",30,"^D",32,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["~$b"]]]]],"^H","remove and return next item from buffer, called under chan mutex"],"~$close-buf!",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",34,"^C",4,"^D",34,"^E",14,"^F","^G","^H","called on chan closed under chan mutex, return ignored","^I",["^J",["^K",["^J",[["~$b"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/close-buf!","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",14,"^N",["^J",[["~$b"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",30,"^D",34,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["~$b"]]]]],"^H","called on chan closed under chan mutex, return ignored"],"~$close!",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",21,"^C",4,"^D",21,"^E",10,"^F","~$cljs.core.async.impl.protocols/Channel","^H",null,"^I",["^J",["^K",["^J",[["~$chan"]]]]]],"^F","^V","^7","~$cljs.core.async.impl.protocols/close!","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",10,"^N",["^J",[["^W"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",20,"^D",21,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["^W"]]]]],"^H",null],"~$Handler",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",24,"^C",14,"^D",24,"^E",21,"^H",null,"~:protocol-symbol",true,"~:jsdoc",["^J",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$active?",[["~$h"]],"~$blockable?",[["~$h"]],"~$commit",[["~$h"]]]]],"^Z",true,"^7","~$cljs.core.async.impl.protocols/Handler","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",21,"^C",1,"^B",24,"^10",["^ ","^11",["^ ","^12",[["~$h"]],"^13",[["~$h"]],"^14",[["~$h"]]]],"~:info",null,"^D",24,"~:tag","~$any","~:impls",["^6",[]],"^H",null,"^[",["^J",["@interface"]]],"^13",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",26,"^C",4,"^D",26,"^E",14,"^F","^15","^H","returns true if this handler may be blocked, otherwise it must not block","^I",["^J",["^K",["^J",[["~$h"]]]]]],"^F","^15","^7","~$cljs.core.async.impl.protocols/blockable?","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",14,"^N",["^J",[["~$h"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",24,"^D",26,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["~$h"]]]]],"^H","returns true if this handler may be blocked, otherwise it must not block"],"^12",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",25,"^C",4,"^D",25,"^E",11,"^F","^15","^H","returns true if has callback. Must work w/o lock","^I",["^J",["^K",["^J",[["~$h"]]]]]],"^F","^15","^7","~$cljs.core.async.impl.protocols/active?","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",11,"^N",["^J",[["~$h"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",24,"^D",25,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["~$h"]]]]],"^H","returns true if has callback. Must work w/o lock"],"~$Buffer",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",30,"^C",14,"^D",30,"^E",20,"^H",null,"^Z",true,"^[",["^J",["@interface"]],"^10",["^ ","^11",["^ ","~$full?",[["~$b"]],"^>",[["~$b"]],"~$add!*",[["~$b","~$itm"]],"^S",[["~$b"]]]]],"^Z",true,"^7","^G","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",20,"^C",1,"^B",30,"^10",["^ ","^11",["^ ","^1=",[["~$b"]],"^>",[["~$b"]],"^1>",[["~$b","^1?"]],"^S",[["~$b"]]]],"^16",null,"^D",30,"^17","^18","^19",["^6",[]],"^H",null,"^[",["^J",["@interface"]]],"^1=",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",31,"^C",4,"^D",31,"^E",9,"^F","^G","^H","returns true if buffer cannot accept put","^I",["^J",["^K",["^J",[["~$b"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/full?","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",9,"^N",["^J",[["~$b"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",30,"^D",31,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["~$b"]]]]],"^H","returns true if buffer cannot accept put"],"~$add!",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",36,"^C",7,"^D",36,"^E",11,"^I",["^J",["^K",["^J",[["~$b"],["~$b","^1?"]]]]],"~:top-fn",["^ ","^M",false,"^Q",2,"^N",["^J",[["~$b"],["~$b","^1?"]]],"^I",["^J",[["~$b"],["~$b","^1?"]]],"^P",["^J",[null,null]]]],"^7","~$cljs.core.async.impl.protocols/add!","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",11,"^1B",["^ ","^M",false,"^Q",2,"^N",["^J",[["~$b"],["~$b","^1?"]]],"^I",["^J",[["~$b"],["~$b","^1?"]]],"^P",["^J",[null,null]]],"^N",["^J",[["~$b"],["~$b","^1?"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",36,"^D",36,"^Q",2,"^R",true,"^I",["^J",[["~$b"],["~$b","^1?"]]]],"^1>",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",33,"^C",4,"^D",33,"^E",9,"^F","^G","^H","if room, add item to the buffer, returns b, called under chan mutex","^I",["^J",["^K",["^J",[["~$b","^1?"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/add!*","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",9,"^N",["^J",[["~$b","^1?"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",30,"^D",33,"^Q",2,"^R",true,"^I",["^J",["^K",["^J",[["~$b","^1?"]]]]],"^H","if room, add item to the buffer, returns b, called under chan mutex"],"~$ReadPort",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",13,"^C",14,"^D",13,"^E",22,"^H",null,"^Z",true,"^[",["^J",["@interface"]],"^10",["^ ","^11",["^ ","~$take!",[["~$port","~$fn1-handler"]]]]],"^Z",true,"^7","~$cljs.core.async.impl.protocols/ReadPort","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",22,"^C",1,"^B",13,"^10",["^ ","^11",["^ ","^1F",[["^1G","^1H"]]]],"^16",null,"^D",13,"^17","^18","^19",["^6",[]],"^H",null,"^[",["^J",["@interface"]]],"~$Channel",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",20,"^C",14,"^D",20,"^E",21,"^H",null,"^Z",true,"^[",["^J",["@interface"]],"^10",["^ ","^11",["^ ","^U",[["^W"]],"~$closed?",[["^W"]]]]],"^Z",true,"^7","^V","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",21,"^C",1,"^B",20,"^10",["^ ","^11",["^ ","^U",[["^W"]],"^1K",[["^W"]]]],"^16",null,"^D",20,"^17","^18","^19",["^6",[]],"^H",null,"^[",["^J",["@interface"]]],"^1K",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",22,"^C",4,"^D",22,"^E",11,"^F","^V","^H",null,"^I",["^J",["^K",["^J",[["^W"]]]]]],"^F","^V","^7","~$cljs.core.async.impl.protocols/closed?","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",11,"^N",["^J",[["^W"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",20,"^D",22,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["^W"]]]]],"^H",null],"~$UnblockingBuffer",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",43,"^C",14,"^D",43,"^E",30,"^H",null,"^Z",true,"^[",["^J",["@interface"]],"^10",["^ ","^11",["^ "]]],"^Z",true,"^7","~$cljs.core.async.impl.protocols/UnblockingBuffer","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",30,"^C",1,"^B",43,"^10",["^ ","^11",["^ "]],"^16",null,"^D",43,"^17","^18","^19",["^6",[]],"^H",null,"^[",["^J",["@interface"]]],"~$MAX-QUEUE-SIZE",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",11,"^C",14,"^D",11,"^E",28,"~:const",true],"^7","~$cljs.core.async.impl.protocols/MAX-QUEUE-SIZE","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",28,"~:const-expr",["^ ","~:op","^1P","~:val",1024,"~:env",["^ ","~:context","~:expr"],"~:form",1024,"^17","~$number"],"^C",1,"^1P",true,"^B",11,"^D",11,"^17","^1Y"],"^14",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",28,"^C",4,"^D",28,"^E",10,"^F","^15","^H","commit to fulfilling its end of the transfer, returns cb. Must be called within lock","^I",["^J",["^K",["^J",[["~$h"]]]]]],"^F","^15","^7","~$cljs.core.async.impl.protocols/commit","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",10,"^N",["^J",[["~$h"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",24,"^D",28,"^Q",1,"^R",true,"^I",["^J",["^K",["^J",[["~$h"]]]]],"^H","commit to fulfilling its end of the transfer, returns cb. Must be called within lock"],"~$put!",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",17,"^C",4,"^D",17,"^E",8,"^F","~$cljs.core.async.impl.protocols/WritePort","^H","derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val.","^I",["^J",["^K",["^J",[["^1G","~$val","^1H"]]]]]],"^F","^20","^7","~$cljs.core.async.impl.protocols/put!","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",8,"^N",["^J",[["^1G","^21","^1H"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",16,"^D",17,"^Q",3,"^R",true,"^I",["^J",["^K",["^J",[["^1G","^21","^1H"]]]]],"^H","derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val."],"^1F",["^ ","^?",null,"^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",14,"^C",4,"^D",14,"^E",9,"^F","^1I","^H","derefable val if taken, nil if take was enqueued","^I",["^J",["^K",["^J",[["^1G","^1H"]]]]]],"^F","^1I","^7","~$cljs.core.async.impl.protocols/take!","^M",false,"^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",9,"^N",["^J",[["^1G","^1H"]]],"^O",null,"^P",["^J",[null,null]],"^C",1,"^B",13,"^D",14,"^Q",2,"^R",true,"^I",["^J",["^K",["^J",[["^1G","^1H"]]]]],"^H","derefable val if taken, nil if take was enqueued"],"~$WritePort",["^ ","^@",["^ ","^A","/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^B",16,"^C",14,"^D",16,"^E",23,"^H",null,"^Z",true,"^[",["^J",["@interface"]],"^10",["^ ","^11",["^ ","^1[",[["^1G","^21","^1H"]]]]],"^Z",true,"^7","^20","^A","resources/public/js/compiled/out/cljs/core/async/impl/protocols.cljs","^E",23,"^C",1,"^B",16,"^10",["^ ","^11",["^ ","^1[",[["^1G","^21","^1H"]]]],"^16",null,"^D",16,"^17","^18","^19",["^6",[]],"^H",null,"^[",["^J",["@interface"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^H",null]