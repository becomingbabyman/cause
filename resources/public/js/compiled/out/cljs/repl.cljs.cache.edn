{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs.repl, :imports nil, :requires {spec cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses nil, :defs {print-doc {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/repl.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([{n :ns, nm :name, :as m}]))}, :name cljs.repl/print-doc, :variadic false, :file "resources/public/js/compiled/out/cljs/repl.cljs", :end-column 16, :method-params ([p__38329]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{n :ns, nm :name, :as m}]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.repl cljs.repl, spec cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:args :ret :fn :protocol :ns :name :special-form :repl-special-function :methods :macro :url quote :arglists :doc :forms}, :order [:ns :name :protocol :forms :arglists :macro :repl-special-function quote :special-form :doc :url :methods :args :ret :fn]}, :doc nil}