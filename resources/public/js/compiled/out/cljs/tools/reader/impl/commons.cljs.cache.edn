{:rename-macros {}, :renames {}, :externs {parseInt {}, isNaN {}, parseFloat {}}, :use-macros {}, :excludes #{char}, :name cljs.tools.reader.impl.commons, :imports nil, :requires {cljs.tools.reader.impl.errors cljs.tools.reader.impl.errors, cljs.tools.reader.reader-types cljs.tools.reader.reader-types, cljs.tools.reader.impl.utils cljs.tools.reader.impl.utils}, :cljs.spec/speced-vars [], :uses {char cljs.tools.reader.impl.utils, numeric? cljs.tools.reader.impl.utils, reader-error cljs.tools.reader.impl.errors, peek-char cljs.tools.reader.reader-types, read-char cljs.tools.reader.reader-types, newline? cljs.tools.reader.impl.utils}, :defs {match-number {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 89, :column 7, :end-line 89, :end-column 19, :arglists (quote ([s]))}, :name cljs.tools.reader.impl.commons/match-number, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, skip-line {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 36, :column 7, :end-line 36, :end-column 16, :arglists (quote ([reader])), :doc "Advances the reader to the end of a line. Returns the reader"}, :name cljs.tools.reader.impl.commons/skip-line, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 16, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Advances the reader to the end of a line. Returns the reader"}, int-pattern {:name cljs.tools.reader.impl.commons/int-pattern, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 44, :column 1, :end-line 44, :end-column 17, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 44, :column 6, :end-line 44, :end-column 17}, :tag any}, read-comment {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 124, :column 7, :end-line 124, :end-column 19, :arglists (quote ([rdr & _])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(rdr _)], :arglists ([rdr & _]), :arglists-meta (nil)}}, :name cljs.tools.reader.impl.commons/read-comment, :variadic true, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(rdr _)], :arglists ([rdr & _]), :arglists-meta (nil)}, :method-params [(rdr _)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists ([rdr & _])}, match-ratio {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 67, :column 8, :end-line 67, :end-column 19, :private true, :arglists (quote ([s]))}, :private true, :name cljs.tools.reader.impl.commons/match-ratio, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, match-int {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 48, :column 8, :end-line 48, :end-column 17, :private true, :arglists (quote ([s]))}, :private true, :name cljs.tools.reader.impl.commons/match-int, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, parse-symbol {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 97, :column 7, :end-line 97, :end-column 19, :arglists (quote ([token])), :doc "Parses a string into a vector of the namespace and symbol"}, :name cljs.tools.reader.impl.commons/parse-symbol, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 19, :method-params ([token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([token])), :doc "Parses a string into a vector of the namespace and symbol"}, number-literal? {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 20, :column 16, :end-line 20, :end-column 31, :tag boolean, :arglists (quote ([reader initch])), :doc "Checks whether the reader is at the start of a number literal"}, :name cljs.tools.reader.impl.commons/number-literal?, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 31, :method-params ([reader initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :ret-tag boolean, :end-line 20, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([reader initch])), :doc "Checks whether the reader is at the start of a number literal"}, read-past {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([pred rdr])), :doc "Read until first character that doesn't match pred, returning\n   char."}, :name cljs.tools.reader.impl.commons/read-past, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 16, :method-params ([pred rdr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred rdr])), :doc "Read until first character that doesn't match pred, returning\n   char."}, float-pattern {:name cljs.tools.reader.impl.commons/float-pattern, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 46, :column 1, :end-line 46, :end-column 19, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 46, :column 6, :end-line 46, :end-column 19}, :tag any}, matches? {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 85, :column 16, :end-line 85, :end-column 24, :tag boolean, :arglists (quote ([pattern s]))}, :name cljs.tools.reader.impl.commons/matches?, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 24, :method-params ([pattern s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :ret-tag boolean, :end-line 85, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([pattern s]))}, throwing-reader {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 128, :column 7, :end-line 128, :end-column 22, :arglists (quote ([msg]))}, :name cljs.tools.reader.impl.commons/throwing-reader, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, match-float {:protocol-inline nil, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 78, :column 8, :end-line 78, :end-column 19, :private true, :arglists (quote ([s]))}, :private true, :name cljs.tools.reader.impl.commons/match-float, :variadic false, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ratio-pattern {:name cljs.tools.reader.impl.commons/ratio-pattern, :file "resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 45, :column 1, :end-line 45, :end-column 19, :meta {:file "/Users/crs/Code/eunoia/causal-tree/resources/public/js/compiled/out/cljs/tools/reader/impl/commons.cljs", :line 45, :column 6, :end-line 45, :end-column 19}, :tag any}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}